/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : NOKIA5110_CONTROLLER.h
**     Project     : EA076_PE
**     Processor   : MKL25Z128VLK4
**     Component   : PDC8544
**     Version     : Component 01.006, Driver 01.00, CPU db: 3.00.000
**     Compiler    : GNU C Compiler
**     Date/Time   : 2019-05-12, 14:13, # CodeGen: 217
**     Abstract    :
**
**     Settings    :
**
**     Contents    :
**         GetWidth              - NOKIA5110_CONTROLLER_PixelDim NOKIA5110_CONTROLLER_GetWidth(void);
**         GetHeight             - NOKIA5110_CONTROLLER_PixelDim NOKIA5110_CONTROLLER_GetHeight(void);
**         GetLongerSide         - NOKIA5110_CONTROLLER_PixelDim NOKIA5110_CONTROLLER_GetLongerSide(void);
**         GetShorterSide        - NOKIA5110_CONTROLLER_PixelDim NOKIA5110_CONTROLLER_GetShorterSide(void);
**         SetDisplayOrientation - void NOKIA5110_CONTROLLER_SetDisplayOri...
**         GetDisplayOrientation - NOKIA5110_CONTROLLER_DisplayOrientation...
**         SetPos                - void NOKIA5110_CONTROLLER_SetPos(NOKIA5110_CONTROLLER_PixelDim x,...
**         Clear                 - void NOKIA5110_CONTROLLER_Clear(void);
**         ClearLine             - void NOKIA5110_CONTROLLER_ClearLine(uint8_t lineNumber);
**         WriteChar             - void NOKIA5110_CONTROLLER_WriteChar(uint8_t ch);
**         WriteString           - void NOKIA5110_CONTROLLER_WriteString(uint8_t *str);
**         WriteLineStr          - void NOKIA5110_CONTROLLER_WriteLineStr(uint8_t line, uint8_t *str);
**         SetContrast           - void NOKIA5110_CONTROLLER_SetContrast(uint8_t contrast);
**         SetMode               - void NOKIA5110_CONTROLLER_SetMode(bool inverted);
**         UpdateFull            - void NOKIA5110_CONTROLLER_UpdateFull(void);
**         UpdateRegion          - void NOKIA5110_CONTROLLER_UpdateRegion(NOKIA5110_CONTROLLER_PixelDim x,...
**         GetLCD                - void NOKIA5110_CONTROLLER_GetLCD(void);
**         GiveLCD               - void NOKIA5110_CONTROLLER_GiveLCD(void);
**         Init                  - void NOKIA5110_CONTROLLER_Init(void);
**         Deinit                - void NOKIA5110_CONTROLLER_Deinit(void);
**
**Copyright : 1997 - 2015 Freescale Semiconductor, Inc. 
**All Rights Reserved.
**
**Redistribution and use in source and binary forms, with or without modification,
**are permitted provided that the following conditions are met:
**
**o Redistributions of source code must retain the above copyright notice, this list
**  of conditions and the following disclaimer.
**
**o Redistributions in binary form must reproduce the above copyright notice, this
**  list of conditions and the following disclaimer in the documentation and/or
**  other materials provided with the distribution.
**
**o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**  contributors may be used to endorse or promote products derived from this
**  software without specific prior written permission.
**
**THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
**http: www.freescale.com
**mail: support@freescale.com
** ###################################################################*/
/*!
** @file NOKIA5110_CONTROLLER.h
** @version 01.00
** @brief
**
*/         
/*!
**  @addtogroup NOKIA5110_CONTROLLER_module NOKIA5110_CONTROLLER module documentation
**  @{
*/         


#ifndef __NOKIA5110_CONTROLLER_H
#define __NOKIA5110_CONTROLLER_H

/* MODULE NOKIA5110_CONTROLLER. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "RESpin1.h"
#include "SCEpin1.h"
#include "D_Cpin1.h"
#include "SM1.h"
#include "WAIT1.h"

#include "CPU.h"

#define NOKIA5110_CONTROLLER_DISPLAY_HW_NOF_COLUMNS  84u /* number of columns in hardware */
#define NOKIA5110_CONTROLLER_DISPLAY_HW_NOF_ROWS     48u /* number of rows in hardware */

extern uint8_t NOKIA5110_CONTROLLER_DisplayBuf[((NOKIA5110_CONTROLLER_DISPLAY_HW_NOF_ROWS-1)/8)+1][NOKIA5110_CONTROLLER_DISPLAY_HW_NOF_COLUMNS]; /* buffer for the display */

#ifndef __BWUserType_NOKIA5110_CONTROLLER_PixelCount
#define __BWUserType_NOKIA5110_CONTROLLER_PixelCount
  typedef uint16_t NOKIA5110_CONTROLLER_PixelCount ; /* A word is enough to hold the number of pixels (84x48). */
#endif
#ifndef __BWUserType_NOKIA5110_CONTROLLER_PixelDim
#define __BWUserType_NOKIA5110_CONTROLLER_PixelDim
  typedef uint8_t NOKIA5110_CONTROLLER_PixelDim ; /* One byte is enough to describe an x/y position. */
#endif

typedef bool NOKIA5110_CONTROLLER_PixelColor; /* one bit is enough to describe the color as we have a monochrome display */

#define NOKIA5110_CONTROLLER_PIXEL_BLACK  1 /* 1 is a black pixel */
#define NOKIA5110_CONTROLLER_PIXEL_WHITE  0 /* 0 is a white pixel */
#define NOKIA5110_CONTROLLER_COLOR_PIXEL_SET      NOKIA5110_CONTROLLER_PIXEL_BLACK /* color for a pixel set */
#define NOKIA5110_CONTROLLER_COLOR_PIXEL_CLR      NOKIA5110_CONTROLLER_PIXEL_WHITE /* color for a pixel cleared */
#define NOKIA5110_CONTROLLER_COLOR_BLACK          NOKIA5110_CONTROLLER_PIXEL_BLACK
#define NOKIA5110_CONTROLLER_COLOR_WHITE          NOKIA5110_CONTROLLER_PIXEL_WHITE
#define NOKIA5110_CONTROLLER_COLOR_RED            NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_BRIGHT_RED     NOKIA5110_CONTROLLER_COLOR_WHITE
#define NOKIA5110_CONTROLLER_COLOR_DARK_RED       NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_GREEN          NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_BRIGHT_GREEN   NOKIA5110_CONTROLLER_COLOR_WHITE
#define NOKIA5110_CONTROLLER_COLOR_DARK_GREEN     NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_BLUE           NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_BRIGHT_BLUE    NOKIA5110_CONTROLLER_COLOR_WHITE
#define NOKIA5110_CONTROLLER_COLOR_DARK_BLUE      NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_YELLOW         NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_BRIGHT_YELLOW  NOKIA5110_CONTROLLER_COLOR_WHITE
#define NOKIA5110_CONTROLLER_COLOR_ORANGE         NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_GREY           NOKIA5110_CONTROLLER_COLOR_BLACK
#define NOKIA5110_CONTROLLER_COLOR_BRIGHT_GREY    NOKIA5110_CONTROLLER_COLOR_WHITE

typedef enum {
  NOKIA5110_CONTROLLER_ORIENTATION_PORTRAIT    = 0,
  NOKIA5110_CONTROLLER_ORIENTATION_PORTRAIT180 = 1,
  NOKIA5110_CONTROLLER_ORIENTATION_LANDSCAPE   = 2,
  NOKIA5110_CONTROLLER_ORIENTATION_LANDSCAPE180= 3
} NOKIA5110_CONTROLLER_DisplayOrientation;

#define NOKIA5110_CONTROLLER_HW_WIDTH         84u /* width of display in pixels */
#define NOKIA5110_CONTROLLER_HW_HEIGHT        48u /* height of display in pixels */

#define NOKIA5110_CONTROLLER_HW_SHORTER_SIDE  48u /* size of shorter display side in pixels */
#define NOKIA5110_CONTROLLER_HW_LONGER_SIDE   84u /* size of longer display side in pixels */



void NOKIA5110_CONTROLLER_SetPos(NOKIA5110_CONTROLLER_PixelDim x, NOKIA5110_CONTROLLER_PixelDim y);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_SetPos (component PDC8544)
**     Description :
**         Sets the cursor to the given position
**     Parameters  :
**         NAME            - DESCRIPTION
**         x               - The column number (in bits). In the range
**                           of 0...83.
**         y               - The row number (byte rows), in the range of
**                           0..5.
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_Clear(void);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_Clear (component PDC8544)
**     Description :
**         Clears the whole display memory.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_ClearLine(uint8_t lineNumber);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_ClearLine (component PDC8544)
**     Description :
**         Clears a character line on the display
**     Parameters  :
**         NAME            - DESCRIPTION
**         lineNumber      - the line number of the line
**                           to be cleared.
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_Init(void);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_Init (component PDC8544)
**     Description :
**         Display driver initialization
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_WriteChar(uint8_t ch);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_WriteChar (component PDC8544)
**     Description :
**         Writes a single character to the display at the current
**         position.
**     Parameters  :
**         NAME            - DESCRIPTION
**         ch              - Char to be written to the display.
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_WriteString(uint8_t *str);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_WriteString (component PDC8544)
**     Description :
**         Writes a zero byte terminated string to the display at the
**         current cursor position.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * str             - Pointer to string to be written to the
**                           display.
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_WriteLineStr(uint8_t line, uint8_t *str);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_WriteLineStr (component PDC8544)
**     Description :
**         Writes a string to the given line position.
**     Parameters  :
**         NAME            - DESCRIPTION
**         line            - The line number, starting with 1.
**       * str             - Pointer to zero byte terminated string
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_UpdateRegion(NOKIA5110_CONTROLLER_PixelDim x, NOKIA5110_CONTROLLER_PixelDim y, NOKIA5110_CONTROLLER_PixelDim w, NOKIA5110_CONTROLLER_PixelDim h);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_UpdateRegion (component PDC8544)
**     Description :
**         Updates a region of the display
**     Parameters  :
**         NAME            - DESCRIPTION
**         x               - x coordinate
**         y               - y coordinate
**         w               - width of the region
**         h               - height of the region
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_UpdateFull(void);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_UpdateFull (component PDC8544)
**     Description :
**         Updates the whole display
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_SetContrast(uint8_t contrast);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_SetContrast (component PDC8544)
**     Description :
**         Sets the display contrast.
**     Parameters  :
**         NAME            - DESCRIPTION
**         contrast        - Contrast value, must be in the
**                           range of  0 >= x < 128
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_SetMode(bool inverted);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_SetMode (component PDC8544)
**     Description :
**         Sets the mode of the display (if inverted or not).
**     Parameters  :
**         NAME            - DESCRIPTION
**         inverted        - Pass TRUE to have the display
**                           operate in inverted mode, FALSE for normal
**                           mode.
**     Returns     : Nothing
** ===================================================================
*/

NOKIA5110_CONTROLLER_DisplayOrientation NOKIA5110_CONTROLLER_GetDisplayOrientation(void);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_GetDisplayOrientation (component PDC8544)
**     Description :
**         Returns the current display orientation
**     Parameters  : None
**     Returns     :
**         ---             - current display orientation
** ===================================================================
*/

#define NOKIA5110_CONTROLLER_GetWidth() \
  NOKIA5110_CONTROLLER_HW_WIDTH

/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_GetWidth (component PDC8544)
**     Description :
**         Returns the width of the display in pixels
**     Parameters  : None
**     Returns     :
**         ---             - width of display
** ===================================================================
*/

#define NOKIA5110_CONTROLLER_GetHeight() \
  NOKIA5110_CONTROLLER_HW_HEIGHT

/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_GetHeight (component PDC8544)
**     Description :
**         Returns the height of the display in pixels
**     Parameters  : None
**     Returns     :
**         ---             - height of display
** ===================================================================
*/

#define NOKIA5110_CONTROLLER_GetLongerSide() \
  NOKIA5110_CONTROLLER_HW_LONGER_SIDE

/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_GetLongerSide (component PDC8544)
**     Description :
**         Returns the longer side of the display in pixels
**     Parameters  : None
**     Returns     :
**         ---             - longer side of display
** ===================================================================
*/

#define NOKIA5110_CONTROLLER_GetShorterSide() \
  NOKIA5110_CONTROLLER_HW_SHORTER_SIDE

/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_GetShorterSide (component PDC8544)
**     Description :
**         Returns the shorter side of the display in pixels
**     Parameters  : None
**     Returns     :
**         ---             - shorter side of display
** ===================================================================
*/

void NOKIA5110_CONTROLLER_SetDisplayOrientation(NOKIA5110_CONTROLLER_DisplayOrientation newOrientation);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_SetDisplayOrientation (component PDC8544)
**     Description :
**         Sets current display orientation
**     Parameters  :
**         NAME            - DESCRIPTION
**         newOrientation  - the new orientation
**                           for the display
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_GetLCD(void);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_GetLCD (component PDC8544)
**     Description :
**         Method to be called for mutual exclusive access to the LCD
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void NOKIA5110_CONTROLLER_GiveLCD(void);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_GiveLCD (component PDC8544)
**     Description :
**         Method to be called for mutual exclusive access to the LCD
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

void SM1_OnBlockReceived(LDD_TUserData *UserDataPtr);

void NOKIA5110_CONTROLLER_Deinit(void);
/*
** ===================================================================
**     Method      :  NOKIA5110_CONTROLLER_Deinit (component PDC8544)
**     Description :
**         Module Deinitialization
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

/* END NOKIA5110_CONTROLLER. */

#endif
/* ifndef __NOKIA5110_CONTROLLER_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
